# Generated by Django 5.2 on 2025-04-18 14:47

import django.contrib.auth.models
import django.core.validators
import django.utils.timezone
import phonenumber_field.modelfields
import user_app.validators
import utils_app.utils
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(help_text='Электронная почта пользователя', max_length=254, unique=True, validators=[django.core.validators.RegexValidator(message='Введите правильный адрес электронной почты.', regex="^[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*(?<!\\.)@[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?(?:\\.[a-zA-Z]{2,})+$"), django.core.validators.MinLengthValidator(5)], verbose_name='Почта')),
                ('first_name', models.CharField(help_text='Имя пользователя', max_length=254, validators=[user_app.validators.cyrillic_latin_validator, django.core.validators.MinLengthValidator(3)], verbose_name='Имя')),
                ('last_name', models.CharField(help_text='Фамилия пользователя', max_length=254, validators=[user_app.validators.cyrillic_latin_validator, django.core.validators.MinLengthValidator(3)], verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, help_text='Отчество пользователя', max_length=254, validators=[user_app.validators.cyrillic_latin_validator, user_app.validators.optional_min_length_validator], verbose_name='Отчество')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(help_text='Номер телефона пользователя', max_length=128, region=None, unique=True, verbose_name='Номер телефона')),
                ('avatar', models.ImageField(blank=True, default=None, null=True, upload_to=utils_app.utils.image_file_path, verbose_name='Аватар')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
